{"index.js":"function checkCashRegister(price, cash, cid) {\n  let currentUnit = [[\"PENNY\", 0.01], [\"NICKEL\", 0.05], [\"DIME\", 0.1], [\"QUARTER\", 0.25], [\"ONE\", 1], [\"FIVE\", 5], [\"TEN\", 10], [\"TWENTY\", 20], [\"ONE HUNDRED\", 100]];\n  let money = moneyInTheRegister(cid);\n  const changeArr =[];\n  // calculate the change\n  let change = cash - price;\n  // Add the cash in drawer to the array of values\n  for(let i =0;i < currentUnit.length;i++){\n    currentUnit[i][2] = cid[i][1];\n  }\n  // sort the array descendantly\n  currentUnit.sort((a,b)=>{\n    return b[1]-a[1];\n  });\n\n  let remaining = change;\n  let times=0;\n  if(remaining > 0){\n    // loop through the array and from greatest to smallest divide the change when possible\n    for(let j = 0; j < currentUnit.length; j++){\n      times =0;\n      // find the first highest value and divide the change from that\n        if(remaining - currentUnit[j][1] >= 0 && currentUnit[j][2] > currentUnit[j][1]){\n          \n          while(remaining.toFixed(3) >= currentUnit[j][1]  && currentUnit[j][2] > 0){\n            times++;\n            remaining-= currentUnit[j][1];\n            currentUnit[j][2] -= currentUnit[j][1];\n          }\n          //push into the array the current unit and how was divided\n         changeArr.push([currentUnit[j][0],currentUnit[j][1]*times]);\n        }\n      \n    }\n  }\n  // depending on the cash in drawer return the respected object\n  if(change < 0 || change > money || changeArr.length === 0){\n    return {status: \"INSUFFICIENT_FUNDS\", change: []};\n  }\n  else if(change === money){\n    return  {status: \"CLOSED\", change: cid};\n  }else{\n      return {status: \"OPEN\", change: changeArr};\n  }\n}\n// calculate the total value in the register\nfunction moneyInTheRegister(cid){\n    let sum =0;\n    for(let i =0; i < cid.length; i++){\n      sum += parseFloat(cid[i][1].toFixed(3));\n    }\n    return sum;\n}\n// Example cash-in-drawer array:\n// [[\"PENNY\", 1.01],\n// [\"NICKEL\", 2.05],\n// [\"DIME\", 3.1],\n// [\"QUARTER\", 4.25],\n// [\"ONE\", 90],\n// [\"FIVE\", 55],\n// [\"TEN\", 20],\n// [\"TWENTY\", 60],\n// [\"ONE HUNDRED\", 100]]\n\nlet chan;\nchan =  checkCashRegister(3.26, 100, [[\"PENNY\", 1.01], [\"NICKEL\", 2.05], [\"DIME\", 3.1], [\"QUARTER\", 4.25], [\"ONE\", 90], [\"FIVE\", 55], [\"TEN\", 20], [\"TWENTY\", 60], [\"ONE HUNDRED\", 100]]);\n"}